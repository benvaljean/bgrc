#!/bin/bash
#deploy_bgrc
#Deploy bgrc environment to other hosts


self="$(basename $0)"
ssh_known_hosts="${HOME}/.ssh/known_hosts"
dirname="$(dirname $0)"

usage()
{
	echo -e "deploy_bgrc \nUsage: ${self} -a | -h host | -l [-v] \n-a Use ssh known_hosts to apply to all known hosts\n-h Deploy to single host\n-l Deploy to local environment" 1>&2
	exit 1
}
[[ "$#" == "0" ]] && usage

if [ -f ${HOME}/.bgrc.cfg ]; then
	. ${HOME}/.bgrc.cfg
fi

SSH_OPTIONS=${SSH_OPTIONS--o PubkeyAuthentication=yes -o PasswordAuthentication=no -o NumberOfPasswordPrompts=0 -o StrictHostKeyChecking=no -o ConnectTimeout=3}


#Get current version and verify bgrc is present
bgrclocations="./.bgrc ${dirname}/../.bgrc ${HOME}/.bgrc"
bgrc=
for i in $bgrclocations ; do
	if [[ -a $i ]]; then
		bgrc=${i}
		bgrclocation=${i%/.bgrc}
		break
	fi
done
[[ -z $bgrc ]] && echo bgrc not found && exit 1

ver=$(grep -o 'bgrc [0-9].*' ${bgrc})

deploy_bgrc() 
{	
	local bgrclocation=$1
	local files=
	local errors=0
	src=

	#Build list of files to copy
	#Not using arrays to ensure backwards compatibility
	#Always copy:
	files=".bgrc bin .hushlogin"
	#Only copy if bgrc version already present


	grep bgvimrc ${HOME}/.vimrc &>/dev/null
	[[ $? == "0" || $? == "2" ]] && files="${files} .vimrc .vim"
	grep bgscreenrc ${HOME}/.screenrc &>/dev/null
	[[ $? == "0" || $? == "2" ]] && files="${files} .screenrc"
	#Add location to $files
	for file in ${files} ; do
		src="${src} ${bgrclocation}/${file}"
	done

	if which rsync &>/dev/null ; then
		rsync -aq --force ${src} ${HOME} || errors=$(expr $errors + 1)
	else
		scp -r ${src} ${HOME} || errors=$(expr $errors + 1)
	fi

	grep bgrc ${HOME}/.bashrc &>/dev/null || echo -e "#  Source bgrc\n#  https://github.com/benvaljean/bgrc\n. ${HOME}/.bgrc" >>${HOME}/.bashrc || errors=$(expr $errors + 1)
	if [[ "$errors" == "0" ]] ; then
		return 0
	else
		return 1
	fi
}

do_deploy()
{
	allfiles=".bgrc bin .hushlogin .vimrc .vim .screenrc"
	for host in "$@" ; do
		errors=0

		if which rsync 2>&1 >/dev/null ; then
			rsync -e "ssh ${SSH_OPTIONS}" -aq ${allfiles} ${host}:.bgrctemp/ || errors=$(expr $errors + 1)
		else
			scp ${SSH_OPTIONS} -r ${allfiles} ${host}:.bgrctemp/ || errors=$(expr $errors + 1)
		fi

		ssh ${host} "$(typeset -f deploy_bgrc) ; deploy_bgrc .bgrctemp/" || errors=$(expr $errors + 1)
		if [[ "$errors" == "0" ]] ; then
			echo Done $host
		else
			echo Error with $host
		fi
	done

}

version() {
	echo deploy_bgrc ${ver}
	exit 0
}

sshdeployallhosts() {
	if [ -a ${ssh_known_hosts} ]; then
          hosts=$(awk -F'[ ,]' '{print $1}' ${ssh_known_hosts})
		  do_deploy $hosts
		  exit 0
    else
          echo ssh known hosts file ${ssh_known_hosts} not found!
          exit 1
    fi
}

sshdeploylocal() {
	deploy_bgrc ${bgrclocation}
	echo Done local install to ${HOME}
}

while getopts "ah:vl" opt ; do
    case $opt in
        v)
            version
            ;;
        a)
			sshdeployallhosts
            ;;
        h)
            do_deploy $OPTARG
            ;;
        l)
            sshdeploylocal
            ;;
        *|:)
        	usage
        	;;
    esac
done
