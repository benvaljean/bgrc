#!/bin/bash
#deploy_bgrc
#Deploy bgrc environment to other hosts

#TODO
#Detect hashed hosts and skip
#Use scp instead of rsync if it is not available

self=$(basename $0)
ssh_known_hosts=~/.ssh/known_hosts

do_deploy()
{
	for host in $hosts ; do
		#scp ~/.bgrc ~/.vimrc ${host}:

		rsync -e "ssh -o PubkeyAuthentication=yes -o PasswordAuthentication=no -o NumberOfPasswordPrompts=0 -o StrictHostKeyChecking=no -o ConnectTimeout=3" -a ~/.bgrc ~/.vimrc ~/.vim ~/bin ~/.hushlogin ~/.screenrc ${host}:

		ssh -o PubkeyAuthentication=yes -o PasswordAuthentication=no -o NumberOfPasswordPrompts=0 -o StrictHostKeyChecking=no -o ConnectTimeout=3 ${host} 'grep bgrc ~/.bashrc >/dev/null 2>&1 || echo ". ~/.bgrc" >>~/.bashrc'
		#scp ~/bin/deploy_bgrc ${host}:~/bin/deploy_bgrc
		echo Done $host
	done
}

[ -z "$@" ] && echo -e "$self \nUsage: $self [-a | host(s)] [--version]\n-a Use ssh known_hosts to apply to all known hosts\nOr specificy space-delimited list" && exit 1 

#[[ $1 == "--version" ]] && echo $self $ver && exit 0


if [ $1 == "-a" ]; then
	if [ -a $ssh_known_hosts ]; then
	      hosts=$(awk -F'[ ,]' '{print $1}' $ssh_known_hosts )
		  do_deploy
		  exit 0
    else
          echo ssh known hosts file $ssh_known_hosts not found!
          exit 1
    fi
else
          hosts=$@
          do_deploy
fi
