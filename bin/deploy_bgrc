#!/bin/bash
#deploy_bgrc
#Deploy bgrc environment to other hosts

self="$(basename $0)"
ssh_known_hosts="${HOME}/.ssh/known_hosts"
bgrc="${HOME}/.bgrc"
dirname="$(dirname $0)"


if [ -f ${HOME}/.bgrc.cfg ]; then
	. ${HOME}/.bgrc.cfg
fi

SSH_OPTIONS=${SSH_OPTIONS--o PubkeyAuthentication=yes -o PasswordAuthentication=no -o NumberOfPasswordPrompts=0 -o StrictHostKeyChecking=no -o ConnectTimeout=3}


#Get current version and verify bgrc is present
if [[ ! -a $bgrc ]]; then
	if [[ ! -a ${dirname}/../.bgrc ]]; then
		echo $bgrc not found!
		exit 1
	else
		bgrc="${dirname}/../.bgrc"
	fi
else
	ver=$(grep -o 'bgrc [0-9].*' ${HOME}/.bgrc)
fi

files="${HOME}/.bgrc ${HOME}/.vimrc ${HOME}/.vim ${HOME}/bin ${HOME}/.hushlogin ${HOME}/.screenrc"

do_deploy()
{
	for host in "$@" ; do
		errors=0
		if which rsync 2>&1 >/dev/null ; then
			rsync -e "ssh ${SSH_OPTIONS}" -a ${files} ${host}: || errors=$(expr $errors + 1)
		else
			scp ${SSH_OPTIONS} -r ${files} ${host}: || errors=$(expr $errors + 1)
		fi
		ssh ${SSH_OPTIONS} ${host} 'grep bgrc ~/.bashrc >/dev/null 2>&1 || echo ". ~/.bgrc" >>~/.bashrc' || errors=$(expr $errors + 1)
		if [[ "$errors" == "0" ]] ; then
			echo Done $host
		else
			echo Error with $host
		fi
	done
}
usage()
{
	echo -e "deploy_bgrc \nUsage: ${self} -a | -h host | -l [-v] \n-a Use ssh known_hosts to apply to all known hosts\n-h Deploy to single host\n-l Deploy to local environment" 1>&2
	exit 1
}

NUMARGS=$#
[[ $NUMARGS == "0" ]] && usage

version() {
	echo deploy_bgrc ${ver}
	exit 0
}

sshdeployallhosts() {
	if [ -a ${ssh_known_hosts} ]; then
          hosts=$(awk -F'[ ,]' '{print $1}' ${ssh_known_hosts})
		  do_deploy $hosts
		  exit 0
    else
          echo ssh known hosts file ${ssh_known_hosts} not found!
          exit 1
    fi
}

sshdeploylocal() {
	[[ ! -a .bgrc ]] && echo Error: Cannot locate .bgrc in current directory or \$PATH && exit 1
	files=".bgrc .vimrc .vim bin .hushlogin .screenrc"
	rsync -a --force ${files} ${HOME}
	grep bgrc ${bgrc} >/dev/null 2>&1 || echo ". ~/.bgrc" >>~/.bashrc
	echo Done local install to ${HOME}
}

while getopts "ah:vl" opt ; do
    case $opt in
        v)
            version
            ;;
        a)
			sshdeployallhosts
            ;;
        h)
            do_deploy $OPTARG
            ;;
        l)
            sshdeploylocal
            ;;
        *|:)
        	usage
        	;;
    esac
done

[[ "$#" == "0" ]] && usage
