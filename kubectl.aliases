#!/bin/bash

# Abort if kubectl not installed
which kubectl &>/dev/null || return

# Do not resource
type -t __start_kubectl &>/dev/null || . <(kubectl completion bash)

alias k=kubectl

complete -F __start_kubectl k

alias kconf='${EDITOR} ${HOME}/.kube/config'

alias kg='kubectl get'
alias kd='kubectl describe'

alias kgp='kubectl get pods'
alias kgs='kubectl get svc'

#kube get pods with grep
kgpg() {
    if [[ -z $1 ]]; then
        kubectl get pods
    else
        kubectl get pods | grep $1
    fi
}
alias kdp='kubectl describe pod'
alias kds='kubectl describe svc'
alias kgn='kubectl get ns'

alias kgi='kubectl get ingress'
alias kgia='kubectl get ingress -A'

kssh() {
    if [[ $# == 0 ]]; then
        echo -e "kssh pod-name [[container]] [[shell]]\nshell defaults to /bin/bash , container defaults to k8s selection"
        return
    fi
    if [[ $# == 2 ]] || [[ $# == 1 ]]; then
        kubectl exec -it $1 -- ${2:-/bin/bash}
    fi
    if [[ $# == 3 ]]; then
        kubectl exec -it $1 -c $3 -- ${2:-/bin/bash}
    fi
}

alias kuse='kubectl config use-context'
alias kwhoami='echo "$(kubectl config current-context | tr -d '\r')$(kubectl config view --minify | grep namespace | tr -d '\r')"'
alias kcontexts='kubectl config get-contexts'
kns() {
    kubectl config set-context --current --namespace=${1}
}

kpfwd () {
    #kpfwd pod-match-contains pod-port
    kubectl port-forward $(kubectl get pods|grep ${1}|prow 1) 8085:${2}
}
